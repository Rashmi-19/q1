# WS8-Q1
'''
prod={'S':['Aa','b'], 
      'A':['Ac','Sd','e']}
prod1={'S':['Aa','b'], 
      'A':['Ac','Sd','e']}

prod={'A':['Ab','c']}
prod1={'A':['Ab','c']}
'''
prod={'E':['E+T','E-T','T'],
      'T':['T*F','T%F','F'],
      'F':['(E)','i']}
prod1={'E':['E+T','E-T','T'],
      'T':['T*F','T%F','F'],
      'F':['(E)','i']}

terminals=list(prod.keys())
dict1={}

def leftRecursion(t,p):
  for i in p:
    if t not in list(i) :
      dict1.setdefault(t, []).append(i+t+"'")
    else:
      c=''
      for j in i:
        if j!=t:
          c=c+j
      dict1.setdefault(t+"'",[]).append(c+t+"'") 
  dict1.setdefault(t+"'",[]).append('E')     

for i in prod:
  for j in prod[i]:
    if i in j and i in terminals:
      terminals.remove(i)

for i in prod:
  for j in prod[i]:    
    for k in terminals:
      if i not in prod[i] and k in j:
        #print(prod[i],k,j)
        for m in range(len(prod[k])):
          c=''
          for n in j:
            if n==k:
              c+=prod[k][m]
            else:
              c+=n
          prod1[i].append(c)
        prod1[i].remove(j)
#print(prod1)         

c=0
for i in prod1:
  for j in prod[i]:
    if i not in j:
      c+=1
  if c==len(prod[i]):
    dict1[i]=prod[i]      

for i in prod1:
  for j in prod1[i]:
    if i==j[0]:
      leftRecursion(i,prod1[i])
    
    
for i in dict1:
  print(i,'->','| '.join(list(set(dict1[i]))))

#WS8-Q2
# WS8-q2
def leftFactoring(s):
 k=[]
 l=[]
 n=""
 k=s.split('->')
 
 l=k[1].split('/')
 for i in range(0,len(l)-1):
    for j in range(0,min(len(l[i]),len(l[i+1]))):
        if(l[i][j]==l[i+1][j]):
            if l[i][j] not in n:
                n=n+l[i][j]
 print(k[0]+'->'+n+"R")
 m=k[1].split(n)
 print("R->",end="")
 for i in range(1,len(m)):
    print(m[i],end="")
 print("\n")
s=input("Enter the production: ").split(',')
for i in range(len(s)):
    leftFactoring(s[i])
    
